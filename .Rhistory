## Load benfits parameters ----
load(paste0(current_directory,"/prd_parameters/benefit.parameters.rdata"))
## Load eligible tables of SMI,FPL / crosswalks ----
load(paste0(current_directory,"/prd_parameters/tables.rdata"))
## Load default parameters for the PRD----
load(paste0(current_directory,"/prd_parameters/parameters.defaults.rdata"))
# verify that everything is loaded in the console
## Call all the functions----
source(paste0(current_directory,"/libraries.R"), local=TRUE) # Load required packages
source(paste0(current_directory,"/functions/benefits_functions.R"), local=TRUE) # Benefits calculations
source(paste0(current_directory,"/functions/expense_functions.R"), local=TRUE) # Expenses calculations
source(paste0(current_directory,"/functions/BenefitsCalculator_functions.R"), local=TRUE) # Benefits Calculator functions
# SPECIFY PROJECT----
PROJECT<-"TEST"
## 1. Settings----
# Load inputs YAML file
inputs <- read_yaml(paste0(current_directory,"/projects/",PROJECT,".yml"))
# Global settings
k_ftorpt <- inputs$k_ftorpt
schoolagesummercare <- inputs$schoolagesummercare
headstart_ftorpt <- inputs$headstart_ftorpt
preK_ftorpt <- inputs$preK_ftorpt
contelig.headstart <- inputs$contelig.headstart
contelig.earlyheadstart <- inputs$contelig.earlyheadstart
contelig.ccdf <- inputs$contelig.ccdf
# Transfer programs switches
APPLY_CHILDCARE<-inputs$APPLY_CHILDCARE #Childcare block - Head Start and CCDF
APPLY_CCDF<-inputs$APPLY_CCDF
APPLY_HEADSTART<-inputs$APPLY_HEADSTART
APPLY_PREK<-inputs$APPLY_PREK
APPLY_LIHEAP<-inputs$APPLY_LIHEAP
APPLY_HEALTHCARE<-inputs$APPLY_HEALTHCARE
APPLY_MEDICAID_ADULT<-inputs$APPLY_MEDICAID_ADULT
APPLY_MEDICAID_CHILD<-inputs$APPLY_MEDICAID_CHILD
APPLY_ACA<-inputs$APPLY_ACA
APPLY_SECTION8<-inputs$APPLY_SECTION8
APPLY_RAP<-inputs$APPLY_RAP
APPLY_FRSP<-inputs$APPLY_FRSP
APPLY_SNAP<-inputs$APPLY_SNAP
APPLY_SLP<-inputs$APPLY_SLP
APPLY_WIC<-inputs$APPLY_WIC
APPLY_EITC<-inputs$APPLY_EITC
APPLY_TAXES<-inputs$APPLY_TAXES
APPLY_CTC<-inputs$APPLY_CTC
APPLY_CDCTC<-inputs$APPLY_CDCTC
APPLY_FATES<-inputs$APPLY_FATES
APPLY_TANF<-inputs$APPLY_TANF
APPLY_SSI<-inputs$APPLY_SSI
APPLY_SSDI<-inputs$APPLY_SSDI
## 2. Create data from inputs----
data<-function.createData(inputs)
## 3. Attach default expenses----
data<-BenefitsCalculator.DefaultExpenses(data)
## 4. Apply Benefits Calculator (block-by-block)----
# Apply other benefits block
data<-BenefitsCalculator.OtherBenefits(data, APPLY_TANF, APPLY_SSI, APPLY_SSDI) # OPTION TO END WITH APPLY_SSDI
# Apply child care block
data<-BenefitsCalculator.Childcare(data, APPLY_CHILDCARE, APPLY_HEADSTART, APPLY_PREK, APPLY_CCDF,APPLY_FATES) # OPTION TO END WITH APPLY_FATES
# Apply public health insurance block
data<-BenefitsCalculator.Healthcare(data, APPLY_HEALTHCARE, APPLY_MEDICAID_ADULT, APPLY_MEDICAID_CHILD, APPLY_ACA) # OPTION TO END WITH APPLY_ACA
# Apply food and housing block
data<-BenefitsCalculator.FoodandHousing(data, APPLY_SECTION8, APPLY_LIHEAP, APPLY_SNAP, APPLY_SLP, APPLY_WIC, APPLY_RAP, APPLY_FRSP) # OPTION TO END WITH APPLY_FRSP
# Apply taxes and tax credits block
data<-BenefitsCalculator.TaxesandTaxCredits(data, APPLY_EITC, APPLY_CTC, APPLY_CDCTC)
# Generate Additional Variables
data<-function.createVars(data)
## 5. Select variables of interest and save results----
data2<-data %>%
select(ruleYear, stateFIPS, stateName, stateAbbrev, countyortownName, famsize, numadults, numkids
, agePerson1, agePerson2, agePerson3, agePerson4, agePerson5, agePerson6, agePerson7, agePerson8, agePerson9, agePerson10, agePerson11, agePerson12,empl_healthcare
, income, assets.cash
, exp.childcare, exp.food, exp.rentormortgage, exp.healthcare, exp.utilities, exp.misc, exp.transportation
, netexp.childcare, netexp.food, netexp.rentormortgage, netexp.healthcare, netexp.utilities
, value.snap, value.schoolmeals, value.section8, value.liheap
, value.medicaid.adult, value.medicaid.child, value.aca, value.employerhealthcare
, value.CCDF, value.HeadStart, value.PreK
, value.cdctc.fed, value.cdctc.state, value.ctc.fed, value.ctc.state, value.eitc.fed, value.eitc.state
, value.eitc, value.ctc, value.cdctc, value.ssdi, value.ssi
, AfterTaxIncome, NetResources)
write.csv(data2, file = paste0(current_directory,"/output/results_",PROJECT, ".csv"), row.names = FALSE)
# Ellie & Elias Benefits Calculator----
# This program reads-in input data and runs Benefits Calculator
# PREAMBLE----
rm(list=ls())
## Setting your working directory----
current_directory<-getwd()
## Load expense parameters ----
load(paste0(current_directory,"/prd_parameters/expenses.rdata"))
## Load benfits parameters ----
load(paste0(current_directory,"/prd_parameters/benefit.parameters.rdata"))
## Load eligible tables of SMI,FPL / crosswalks ----
load(paste0(current_directory,"/prd_parameters/tables.rdata"))
## Load default parameters for the PRD----
load(paste0(current_directory,"/prd_parameters/parameters.defaults.rdata"))
# verify that everything is loaded in the console
## Call all the functions----
source(paste0(current_directory,"/libraries.R"), local=TRUE) # Load required packages
source(paste0(current_directory,"/functions/benefits_functions.R"), local=TRUE) # Benefits calculations
source(paste0(current_directory,"/functions/expense_functions.R"), local=TRUE) # Expenses calculations
source(paste0(current_directory,"/functions/BenefitsCalculator_functions.R"), local=TRUE) # Benefits Calculator functions
# SPECIFY PROJECT----
PROJECT<-"TEST"
## 1. Settings----
# Load inputs YAML file
inputs <- read_yaml(paste0(current_directory,"/projects/",PROJECT,".yml"))
# Global settings
k_ftorpt <- inputs$k_ftorpt
schoolagesummercare <- inputs$schoolagesummercare
headstart_ftorpt <- inputs$headstart_ftorpt
preK_ftorpt <- inputs$preK_ftorpt
contelig.headstart <- inputs$contelig.headstart
contelig.earlyheadstart <- inputs$contelig.earlyheadstart
contelig.ccdf <- inputs$contelig.ccdf
# Transfer programs switches
APPLY_CHILDCARE<-inputs$APPLY_CHILDCARE #Childcare block - Head Start and CCDF
APPLY_CCDF<-inputs$APPLY_CCDF
APPLY_HEADSTART<-inputs$APPLY_HEADSTART
APPLY_PREK<-inputs$APPLY_PREK
APPLY_LIHEAP<-inputs$APPLY_LIHEAP
APPLY_HEALTHCARE<-inputs$APPLY_HEALTHCARE
APPLY_MEDICAID_ADULT<-inputs$APPLY_MEDICAID_ADULT
APPLY_MEDICAID_CHILD<-inputs$APPLY_MEDICAID_CHILD
APPLY_ACA<-inputs$APPLY_ACA
APPLY_SECTION8<-inputs$APPLY_SECTION8
APPLY_RAP<-inputs$APPLY_RAP
APPLY_FRSP<-inputs$APPLY_FRSP
APPLY_SNAP<-inputs$APPLY_SNAP
APPLY_SLP<-inputs$APPLY_SLP
APPLY_WIC<-inputs$APPLY_WIC
APPLY_EITC<-inputs$APPLY_EITC
APPLY_TAXES<-inputs$APPLY_TAXES
APPLY_CTC<-inputs$APPLY_CTC
APPLY_CDCTC<-inputs$APPLY_CDCTC
APPLY_FATES<-inputs$APPLY_FATES
APPLY_TANF<-inputs$APPLY_TANF
APPLY_SSI<-inputs$APPLY_SSI
APPLY_SSDI<-inputs$APPLY_SSDI
## 2. Create data from inputs----
data<-function.createData(inputs)
## 3. Attach default expenses----
data<-BenefitsCalculator.DefaultExpenses(data)
## 4. Apply Benefits Calculator (block-by-block)----
# Apply other benefits block
data<-BenefitsCalculator.OtherBenefits(data, APPLY_TANF, APPLY_SSI, APPLY_SSDI) # OPTION TO END WITH APPLY_SSDI
# Apply child care block
data<-BenefitsCalculator.Childcare(data, APPLY_CHILDCARE, APPLY_HEADSTART, APPLY_PREK, APPLY_CCDF,APPLY_FATES) # OPTION TO END WITH APPLY_FATES
# Apply public health insurance block
data<-BenefitsCalculator.Healthcare(data, APPLY_HEALTHCARE, APPLY_MEDICAID_ADULT, APPLY_MEDICAID_CHILD, APPLY_ACA) # OPTION TO END WITH APPLY_ACA
# Apply food and housing block
data<-BenefitsCalculator.FoodandHousing(data, APPLY_SECTION8, APPLY_LIHEAP, APPLY_SNAP, APPLY_SLP, APPLY_WIC, APPLY_RAP, APPLY_FRSP) # OPTION TO END WITH APPLY_FRSP
# Apply taxes and tax credits block
data<-BenefitsCalculator.TaxesandTaxCredits(data, APPLY_EITC, APPLY_CTC, APPLY_CDCTC)
# Generate Additional Variables
data<-function.createVars(data)
## 5. Select variables of interest and save results----
data2<-data %>%
select(ruleYear, stateFIPS, stateName, stateAbbrev, countyortownName, famsize, numadults, numkids
, agePerson1, agePerson2, agePerson3, agePerson4, agePerson5, agePerson6, agePerson7, agePerson8, agePerson9, agePerson10, agePerson11, agePerson12,empl_healthcare
, income, assets.cash
, exp.childcare, exp.food, exp.rentormortgage, exp.healthcare, exp.utilities, exp.misc, exp.transportation
, netexp.childcare, netexp.food, netexp.rentormortgage, netexp.healthcare, netexp.utilities
, value.snap, value.schoolmeals, value.section8, value.liheap
, value.medicaid.adult, value.medicaid.child, value.aca, value.employerhealthcare
, value.CCDF, value.HeadStart, value.PreK
, value.cdctc.fed, value.cdctc.state, value.ctc.fed, value.ctc.state, value.eitc.fed, value.eitc.state
, value.eitc, value.ctc, value.cdctc, value.ssdi, value.ssi
, AfterTaxIncome, NetResources)
write.csv(data2, file = paste0(current_directory,"/output/results_",PROJECT, ".csv"), row.names = FALSE)
source("~/Documents/GitHub/policy-rules-database/tests/run_tests.R")
load("/Users/danielalejandrotasconbuchelly/Documents/GitHub/policy-rules-database/prd_parameters/expenses.rdata")
current_directory<-getwd()
## Load expense parameters ----
load(paste0(current_directory,"/prd_parameters/expenses.rdata"))
source("~/Documents/GitHub/policy-rules-database/tests/run_tests.R")
here()
library(testthat)
library(here)
# get directory for this project (in this case, it's where .git is)
proj_dir <- here::here()
#proj_dir <-"/Users/danielalejandrotasconbuchelly/Documents/GitHub/policy-rules-database"
#proj_dir <-"/Users/danielalejandrotasconbuchelly/Dropbox (ATL FRB)/WorkForceDevProj/Documentation/Benefits & Expenses Database/programs"
setwd(proj_dir)
# Step 1 - create a test data frame
rm(list=ls())
## Setting your working directory----
#current_directory <- setwd("C:/Users/f1dat01/Dropbox (ATL FRB)/WorkForceDevProj/Documentation/Benefits & Expenses Database/programs")
#current_directory<- setwd("/Users/danielalejandrotasconbuchelly/Documents/GitHub/policy-rules-database")
#current_directory<-setwd("/Users/danielalejandrotasconbuchelly/Dropbox (ATL FRB)/WorkForceDevProj/Documentation/Benefits & Expenses Database/programs")
current_directory<-getwd()
## Load expense parameters ----
load(paste0(current_directory,"/prd_parameters/expenses.rdata"))
## Load benefits parameters ----
load(paste0(current_directory,"/prd_parameters/benefit.parameters.rdata"))
## Load eligible tables of SMI,FPL / crosswalks ----
load(paste0(current_directory,"/prd_parameters/tables.rdata"))
## Load default parameters for the PRD----
load(paste0(current_directory,"/prd_parameters/parameters.defaults.rdata"))
# verify that everything is loaded in the console
## Call all the functions----
source(paste0(current_directory,"/libraries.R"), local=TRUE) # Load required packages
source(paste0(current_directory,"/functions/benefits_functions.R"), local=TRUE) # Benefits calculations
source(paste0(current_directory,"/functions/expense_functions.R"), local=TRUE) # Expenses calculations
source(paste0(current_directory,"/functions/BenefitsCalculator_functions.R"), local=TRUE) # Benefits Calculator functions
# SPECIFY PROJECT----
PROJECT<-"Unit_test"
#PROJECT<-"TEST_SNAP"
## 1. Settings----
# Load inputs YAML file
inputs <- read_yaml(paste0(current_directory,"/projects/",PROJECT,".yml"))
# Global settings
k_ftorpt <- inputs$k_ftorpt
schoolagesummercare <- inputs$schoolagesummercare
headstart_ftorpt <- inputs$headstart_ftorpt
preK_ftorpt <- inputs$preK_ftorpt
contelig.headstart <- inputs$contelig.headstart
contelig.earlyheadstart <- inputs$contelig.earlyheadstart
contelig.ccdf <- inputs$contelig.ccdf
USEALICE <- inputs$USEALICE
# Transfer programs switches
APPLY_CHILDCARE<-inputs$APPLY_CHILDCARE #Childcare block - Head Start and CCDF
APPLY_CCDF<-inputs$APPLY_CCDF
APPLY_HEADSTART<-inputs$APPLY_HEADSTART
APPLY_PREK<-inputs$APPLY_PREK
APPLY_LIHEAP<-FALSE  #doesn't work if true
APPLY_HEALTHCARE<-inputs$APPLY_HEALTHCARE
APPLY_MEDICAID_ADULT<-inputs$APPLY_MEDICAID_ADULT
APPLY_MEDICAID_CHILD<-inputs$APPLY_MEDICAID_CHILD
APPLY_ACA<-inputs$APPLY_ACA
APPLY_SECTION8<-inputs$APPLY_SECTION8
APPLY_RAP<-inputs$APPLY_RAP
APPLY_FRSP<-inputs$APPLY_FRSP
APPLY_SNAP<-inputs$APPLY_SNAP
APPLY_SLP<-inputs$APPLY_SLP
APPLY_WIC<-inputs$APPLY_WIC
APPLY_EITC<-inputs$APPLY_EITC
APPLY_TAXES<-inputs$APPLY_TAXES
APPLY_CTC<-inputs$APPLY_CTC
APPLY_CDCTC<-inputs$APPLY_CDCTC
APPLY_FATES<-inputs$APPLY_FATES
APPLY_TANF<-inputs$APPLY_TANF
APPLY_SSI<-inputs$APPLY_SSI
APPLY_SSDI<-inputs$APPLY_SSDI
## 2. Create data from inputs----
data<-function.createData(inputs)
## 3. Attach default expenses----
if (USEALICE == FALSE){
data<-BenefitsCalculator.DefaultExpenses(data)
}
if (USEALICE == TRUE){
data<-BenefitsCalculator.ALICEExpenses(data)
}
# testing first function
load("./unit_test/BenefitsCalculator.OtherBenefits_unittest.rdata")
test_that("OtherBenefits",{
expect_equal(BenefitsCalculator.OtherBenefits(data, APPLY_TANF, APPLY_SSDI, APPLY_SSI), data_unittest)
})
data=BenefitsCalculator.OtherBenefits(data, APPLY_TANF, APPLY_SSDI, APPLY_SSI)
load("./unit_test/BenefitsCalculator.Childcare_unittest.rdata")
test_that("Childcare",{
expect_equal(BenefitsCalculator.Childcare(data, APPLY_CHILDCARE, APPLY_HEADSTART, APPLY_PREK, APPLY_CCDF,APPLY_FATES), data_unittest)
})
data=BenefitsCalculator.Childcare(data, APPLY_CHILDCARE, APPLY_HEADSTART, APPLY_PREK, APPLY_CCDF,APPLY_FATES)
load("./unit_test/BenefitsCalculator.Healthcare_unittest.rdata")
test_that("Healthcare",{
expect_equal(BenefitsCalculator.Healthcare(data, APPLY_HEALTHCARE, APPLY_MEDICAID_ADULT, APPLY_MEDICAID_CHILD, APPLY_ACA), data_unittest)
})
data=BenefitsCalculator.Healthcare(data, APPLY_HEALTHCARE, APPLY_MEDICAID_ADULT, APPLY_MEDICAID_CHILD, APPLY_ACA)
load("./unit_test/BenefitsCalculator.FoodandHousing_unittest.rdata")
test_that("FoodandHousing",{
expect_equal(BenefitsCalculator.FoodandHousing(data, APPLY_SECTION8, APPLY_LIHEAP, APPLY_SNAP, APPLY_SLP, APPLY_WIC, APPLY_RAP, APPLY_FRSP), data_unittest)
})
data=BenefitsCalculator.FoodandHousing(data, APPLY_SECTION8, APPLY_LIHEAP, APPLY_SNAP, APPLY_SLP, APPLY_WIC, APPLY_RAP, APPLY_FRSP)
load("./unit_test/BenefitsCalculator.TaxesandTaxCredits_unittest.rdata")
test_that("TaxesandTax",{
expect_equal(BenefitsCalculator.TaxesandTaxCredits(data, APPLY_EITC, APPLY_CTC, APPLY_CDCTC, APPLY_TAXES), data_unittest)
})
data=BenefitsCalculator.TaxesandTaxCredits(data, APPLY_EITC, APPLY_CTC, APPLY_CDCTC, APPLY_TAXES)
load("./unit_test/function.createVars_unittest.rdata")
test_that("createVars",{
expect_equal(function.createVars(data), data_unittest)
})
# Ellie & Elias Benefits Calculator----
# This program reads-in input data and runs Benefits Calculator
# PREAMBLE----
rm(list=ls())
## Setting your working directory----
current_directory<-getwd()
## Load expense parameters ----
load(paste0(current_directory,"/prd_parameters/expenses.rdata"))
## Load benfits parameters ----
load(paste0(current_directory,"/prd_parameters/benefit.parameters.rdata"))
## Load eligible tables of SMI,FPL / crosswalks ----
load(paste0(current_directory,"/prd_parameters/tables.rdata"))
## Load default parameters for the PRD----
load(paste0(current_directory,"/prd_parameters/parameters.defaults.rdata"))
# verify that everything is loaded in the console
## Call all the functions----
source(paste0(current_directory,"/libraries.R"), local=TRUE) # Load required packages
source(paste0(current_directory,"/functions/benefits_functions.R"), local=TRUE) # Benefits calculations
source(paste0(current_directory,"/functions/expense_functions.R"), local=TRUE) # Expenses calculations
source(paste0(current_directory,"/functions/BenefitsCalculator_functions.R"), local=TRUE) # Benefits Calculator functions
# SPECIFY PROJECT----
#PROJECT<-"TEST"
PROJECT<-"Unit_test"
## 1. Settings----
# Load inputs YAML file
inputs <- read_yaml(paste0(current_directory,"/projects/",PROJECT,".yml"))
# Global settings
k_ftorpt <- inputs$k_ftorpt
schoolagesummercare <- inputs$schoolagesummercare
headstart_ftorpt <- inputs$headstart_ftorpt
preK_ftorpt <- inputs$preK_ftorpt
contelig.headstart <- inputs$contelig.headstart
contelig.earlyheadstart <- inputs$contelig.earlyheadstart
contelig.ccdf <- inputs$contelig.ccdf
# Transfer programs switches
APPLY_CHILDCARE<-inputs$APPLY_CHILDCARE #Childcare block - Head Start and CCDF
APPLY_CCDF<-inputs$APPLY_CCDF
APPLY_HEADSTART<-inputs$APPLY_HEADSTART
APPLY_PREK<-inputs$APPLY_PREK
APPLY_LIHEAP<-inputs$APPLY_LIHEAP
APPLY_HEALTHCARE<-inputs$APPLY_HEALTHCARE
APPLY_MEDICAID_ADULT<-inputs$APPLY_MEDICAID_ADULT
APPLY_MEDICAID_CHILD<-inputs$APPLY_MEDICAID_CHILD
APPLY_ACA<-inputs$APPLY_ACA
APPLY_SECTION8<-inputs$APPLY_SECTION8
APPLY_RAP<-inputs$APPLY_RAP
APPLY_FRSP<-inputs$APPLY_FRSP
APPLY_SNAP<-inputs$APPLY_SNAP
APPLY_SLP<-inputs$APPLY_SLP
APPLY_WIC<-inputs$APPLY_WIC
APPLY_EITC<-inputs$APPLY_EITC
APPLY_TAXES<-inputs$APPLY_TAXES
APPLY_CTC<-inputs$APPLY_CTC
APPLY_CDCTC<-inputs$APPLY_CDCTC
APPLY_FATES<-inputs$APPLY_FATES
APPLY_TANF<-inputs$APPLY_TANF
APPLY_SSI<-inputs$APPLY_SSI
APPLY_SSDI<-inputs$APPLY_SSDI
## 2. Create data from inputs----
data<-function.createData(inputs)
## 3. Attach default expenses----
data<-BenefitsCalculator.DefaultExpenses(data)
## 4. Apply Benefits Calculator (block-by-block)----
# Apply other benefits block
data<-BenefitsCalculator.OtherBenefits(data, APPLY_TANF, APPLY_SSI, APPLY_SSDI) # OPTION TO END WITH APPLY_SSDI
# Apply child care block
data<-BenefitsCalculator.Childcare(data, APPLY_CHILDCARE, APPLY_HEADSTART, APPLY_PREK, APPLY_CCDF,APPLY_FATES) # OPTION TO END WITH APPLY_FATES
# Apply public health insurance block
data<-BenefitsCalculator.Healthcare(data, APPLY_HEALTHCARE, APPLY_MEDICAID_ADULT, APPLY_MEDICAID_CHILD, APPLY_ACA) # OPTION TO END WITH APPLY_ACA
# Apply food and housing block
data<-BenefitsCalculator.FoodandHousing(data, APPLY_SECTION8, APPLY_LIHEAP, APPLY_SNAP, APPLY_SLP, APPLY_WIC, APPLY_RAP, APPLY_FRSP) # OPTION TO END WITH APPLY_FRSP
# Apply taxes and tax credits block
data<-BenefitsCalculator.TaxesandTaxCredits(data, APPLY_EITC, APPLY_CTC, APPLY_CDCTC)
# Generate Additional Variables
data<-function.createVars(data)
## 5. Select variables of interest and save results----
data2<-data %>%
select(ruleYear, stateFIPS, stateName, stateAbbrev, countyortownName, famsize, numadults, numkids
, agePerson1, agePerson2, agePerson3, agePerson4, agePerson5, agePerson6, agePerson7, agePerson8, agePerson9, agePerson10, agePerson11, agePerson12,empl_healthcare
, income, assets.cash
, exp.childcare, exp.food, exp.rentormortgage, exp.healthcare, exp.utilities, exp.misc, exp.transportation
, netexp.childcare, netexp.food, netexp.rentormortgage, netexp.healthcare, netexp.utilities
, value.snap, value.schoolmeals, value.section8, value.liheap
, value.medicaid.adult, value.medicaid.child, value.aca, value.employerhealthcare
, value.CCDF, value.HeadStart, value.PreK
, value.cdctc.fed, value.cdctc.state, value.ctc.fed, value.ctc.state, value.eitc.fed, value.eitc.state
, value.eitc, value.ctc, value.cdctc, value.ssdi, value.ssi
, AfterTaxIncome, NetResources)
write.csv(data2, file = paste0(current_directory,"/output/results_",PROJECT, ".csv"), row.names = FALSE)
# Ellie & Elias Benefits Calculator----
# This program reads-in input data and runs Benefits Calculator
# PREAMBLE----
rm(list=ls())
## Setting your working directory----
#current_directory <- setwd("C:/Users/f1acs02/Dropbox (ATL FRB)/WorkForceDevProj/Documentation/Benefits & Expenses Database/programs")
#current_directory <- setwd("C:/Users/f1dat01/Dropbox (ATL FRB)/WorkForceDevProj/Documentation/Benefits & Expenses Database/programs")
#current_directory <- setwd("C:/Users/edgar/Dropbox (ATL FRB)/WorkForceDevProj/Documentation/Benefits & Expenses Database/programs")
#current_directory<-setwd("/Users/danielalejandrotasconbuchelly/Dropbox (ATL FRB)/WorkForceDevProj/Documentation/Benefits & Expenses Database/programs")
current_directory<-getwd()
## Load expense parameters ----
load(paste0(current_directory,"/prd_parameters/expenses.rdata"))
## Load benefits parameters ----
load(paste0(current_directory,"/prd_parameters/benefit.parameters.rdata"))
## Load eligible tables of SMI,FPL / crosswalks ----
load(paste0(current_directory,"/prd_parameters/tables.rdata"))
## Load default parameters for the PRD----
load(paste0(current_directory,"/prd_parameters/parameters.defaults.rdata"))
# verify that everything is loaded in the console
## Call all the functions----
source(paste0(current_directory,"/libraries.R"), local=TRUE) # Load required packages
source(paste0(current_directory,"/functions/benefits_functions.R"), local=TRUE) # Benefits calculations
source(paste0(current_directory,"/functions/expense_functions.R"), local=TRUE) # Expenses calculations
source(paste0(current_directory,"/functions/BenefitsCalculator_functions.R"), local=TRUE) # Benefits Calculator functions
# SPECIFY PROJECT----
PROJECT<-"Unit_test"
#PROJECT<-"TEST"
## 1. Settings----
# Load inputs YAML file
inputs <- read_yaml(paste0(current_directory,"/projects/",PROJECT,".yml"))
# Global settings
k_ftorpt <- inputs$k_ftorpt
schoolagesummercare <- inputs$schoolagesummercare
headstart_ftorpt <- inputs$headstart_ftorpt
preK_ftorpt <- inputs$preK_ftorpt
contelig.headstart <- inputs$contelig.headstart
contelig.earlyheadstart <- inputs$contelig.earlyheadstart
contelig.ccdf <- inputs$contelig.ccdf
USEALICE <- inputs$USEALICE
# Transfer programs switches
APPLY_CHILDCARE<-inputs$APPLY_CHILDCARE #Childcare block - Head Start and CCDF
APPLY_CCDF<-inputs$APPLY_CCDF
APPLY_HEADSTART<-inputs$APPLY_HEADSTART
APPLY_PREK<-inputs$APPLY_PREK
APPLY_LIHEAP<-FALSE  #doesn't work if true
APPLY_HEALTHCARE<-inputs$APPLY_HEALTHCARE
APPLY_MEDICAID_ADULT<-inputs$APPLY_MEDICAID_ADULT
APPLY_MEDICAID_CHILD<-inputs$APPLY_MEDICAID_CHILD
APPLY_ACA<-inputs$APPLY_ACA
APPLY_SECTION8<-inputs$APPLY_SECTION8
APPLY_RAP<-inputs$APPLY_RAP
APPLY_FRSP<-inputs$APPLY_FRSP
APPLY_SNAP<-inputs$APPLY_SNAP
APPLY_SLP<-inputs$APPLY_SLP
APPLY_WIC<-inputs$APPLY_WIC
APPLY_EITC<-inputs$APPLY_EITC
APPLY_TAXES<-inputs$APPLY_TAXES
APPLY_CTC<-inputs$APPLY_CTC
APPLY_CDCTC<-inputs$APPLY_CDCTC
APPLY_FATES<-inputs$APPLY_FATES
APPLY_TANF<-inputs$APPLY_TANF
APPLY_SSI<-inputs$APPLY_SSI
APPLY_SSDI<-inputs$APPLY_SSDI
## 2. Create data from inputs----
data<-function.createData(inputs)
## 3. Attach default expenses----
if (USEALICE == FALSE){
data<-BenefitsCalculator.DefaultExpenses(data)
}
if (USEALICE == TRUE){
data<-BenefitsCalculator.ALICEExpenses(data)
}
## 4. Apply Benefits Calculator (block-by-block)----
# Apply other benefits block
data<-BenefitsCalculator.OtherBenefits(data, APPLY_TANF, APPLY_SSI, APPLY_SSDI) # OPTION TO END WITH APPLY_SSDI
data_unittest<-data
save (data_unittest,file="./unit_test/BenefitsCalculator.OtherBenefits_unittest.rdata")
rm(data_unittest)
# Apply child care block
data<-BenefitsCalculator.Childcare(data, APPLY_CHILDCARE, APPLY_HEADSTART, APPLY_PREK, APPLY_CCDF,APPLY_FATES) # OPTION TO END WITH APPLY_FATES
data_unittest<-data
save (data_unittest,file="./unit_test/BenefitsCalculator.Childcare_unittest.rdata")
rm(data_unittest)
# Apply public health insurance block
data<-BenefitsCalculator.Healthcare(data, APPLY_HEALTHCARE, APPLY_MEDICAID_ADULT, APPLY_MEDICAID_CHILD, APPLY_ACA) # OPTION TO END WITH APPLY_ACA
data_unittest<-data
save (data_unittest,file="./unit_test/BenefitsCalculator.Healthcare_unittest.rdata")
rm(data_unittest)
# Apply food and housing block
data<-BenefitsCalculator.FoodandHousing(data, APPLY_SECTION8, APPLY_LIHEAP, APPLY_SNAP, APPLY_SLP, APPLY_WIC, APPLY_RAP, APPLY_FRSP) # OPTION TO END WITH APPLY_FRSP
data_unittest<-data
save (data_unittest,file="./unit_test/BenefitsCalculator.FoodandHousing_unittest.rdata")
rm(data_unittest)
# Apply taxes and tax credits block
data<-BenefitsCalculator.TaxesandTaxCredits(data, APPLY_EITC, APPLY_CTC, APPLY_CDCTC, APPLY_TAXES)
data_unittest<-data
save (data_unittest,file="./unit_test/BenefitsCalculator.TaxesandTaxCredits_unittest.rdata")
rm(data_unittest)
# Generate Additional Variables
data<-function.createVars(data)
data_unittest<-data
save (data_unittest,file="./unit_test/function.createVars_unittest.rdata")
rm(data_unittest)
## 5. Select variables of interest and save results----
data2<-data %>%
select(ruleYear, stateFIPS, stateName, stateAbbrev, countyortownName, famsize, numadults, numkids
, agePerson1, agePerson2, agePerson3, agePerson4, agePerson5, agePerson6, agePerson7, agePerson8, agePerson9, agePerson10, agePerson11, agePerson12,empl_healthcare
, income, assets.cash
, exp.childcare, exp.food, exp.rentormortgage, exp.healthcare, exp.utilities, exp.misc, exp.transportation
, netexp.childcare, netexp.food, netexp.rentormortgage, netexp.healthcare, netexp.utilities
, tax.income.fed, tax.income.state, tax.FICA
, value.snap, value.wic, value.schoolmeals, value.section8, value.liheap
, value.medicaid.adult, value.medicaid.child, value.aca, value.employerhealthcare
, value.CCDF, value.HeadStart, value.PreK
, value.cdctc.fed, value.cdctc.state, value.ctc.fed, value.ctc.state, value.eitc.fed, value.eitc.state
, value.eitc, value.ctc, value.cdctc, value.ssdi, value.ssi
, AfterTaxIncome, NetResources)
write.csv(data2, file = paste0(current_directory,"/output/results_",PROJECT, ".csv"), row.names = FALSE)
data<-BenefitsCalculator.FoodandHousing(data, APPLY_SECTION8, APPLY_LIHEAP, APPLY_SNAP, APPLY_SLP, APPLY_WIC, APPLY_RAP, APPLY_FRSP) # OPTION TO END WITH APPLY_FRSP
proj_dir <-"/Users/danielalejandrotasconbuchelly/Dropbox (ATL FRB)/WorkForceDevProj/Documentation/Benefits & Expenses Database/programs"
setwd(proj_dir)
set_here()
source("~/Dropbox (ATL FRB)/WorkForceDevProj/Documentation/Benefits & Expenses Database/programs/tests/run_tests.R")
source("~/Dropbox (ATL FRB)/WorkForceDevProj/Documentation/Benefits & Expenses Database/programs/tests/run_tests.R")
source("~/Dropbox (ATL FRB)/WorkForceDevProj/Documentation/Benefits & Expenses Database/programs/tests/run_tests.R")
library(testthat)
library(here)
# get directory for this project (in this case, it's where .git is)
proj_dir <- here::here()
#proj_dir <-"/Users/danielalejandrotasconbuchelly/Documents/GitHub/policy-rules-database"
#proj_dir <-"/Users/danielalejandrotasconbuchelly/Dropbox (ATL FRB)/WorkForceDevProj/Documentation/Benefits & Expenses Database/programs"
setwd(proj_dir)
# Step 1 - create a test data frame
rm(list=ls())
## Setting your working directory----
#current_directory <- setwd("C:/Users/f1dat01/Dropbox (ATL FRB)/WorkForceDevProj/Documentation/Benefits & Expenses Database/programs")
#current_directory<- setwd("/Users/danielalejandrotasconbuchelly/Documents/GitHub/policy-rules-database")
#current_directory<-setwd("/Users/danielalejandrotasconbuchelly/Dropbox (ATL FRB)/WorkForceDevProj/Documentation/Benefits & Expenses Database/programs")
current_directory<-getwd()
## Load expense parameters ----
load(paste0(current_directory,"/prd_parameters/expenses.rdata"))
current_directory
